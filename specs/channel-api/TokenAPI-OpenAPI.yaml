openapi: '3.0.3'
info:
  version: 3.1.12
  title: Token
  termsOfService: https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx
  contact:
    name: Azure SDK
    url: https://botframework.com
    email: botframework@microsoft.com
  license:
    name: The MIT License (MIT)
    url: https://opensource.org/licenses/MIT
paths:
  /api/botsignin/GetSignInUrl:
    get:
      tags:
        - BotSignIn
      operationId: BotSignIn_GetSignInUrl
      parameters:
        - name: state
          in: query
          required: true
          schema:
            type: string
        - name: code_challenge
          in: query
          required: false
          schema:
            type: string
        - name: emulatorUrl
          in: query
          required: false
          schema:
            type: string
        - name: finalRedirect
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The operation succeeded.
          content:
            text/plain:
              schema:
                type: string
  /api/botsignin/GetSignInResource:
    get:
      tags:
        - BotSignIn
      operationId: BotSignIn_GetSignInResource
      parameters:
        - name: state
          in: query
          required: true
          schema:
            type: string
        - name: code_challenge
          in: query
          required: false
          schema:
            type: string
        - name: emulatorUrl
          in: query
          required: false
          schema:
            type: string
        - name: finalRedirect
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInUrlResponse'
  /api/usertoken/GetToken:
    get:
      tags:
        - UserToken
      operationId: UserToken_GetToken
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: connectionName
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "A Token Response object will be returned\r\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '404':
          description: "Resource was not found\r\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        default:
          description: The operation failed and the response is an error object describing the status code and failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/usertoken/GetAadTokens:
    post:
      tags:
        - UserToken
      operationId: UserToken_GetAadTokens
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: connectionName
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: false
          schema:
            type: string
      requestBody:            
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AadResourceUrls'
      responses:
        '200':
          description: An array of key value pairs
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/TokenResponse'
        default:
          description: The operation failed and the response is an error object describing the status code and failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/usertoken/SignOut:
    delete:
      tags:
        - UserToken
      operationId: UserToken_SignOut
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: connectionName
          in: query
          required: false
          schema:
            type: string
        - name: channelId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The operation succeeded, there is no response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '204':
          description: No Content
        default:
          description: The operation failed and the response is an error object describing the status code and failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/usertoken/GetTokenStatus:
    get:
      tags:
        - UserToken
      operationId: UserToken_GetTokenStatus
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: false
          schema:
            type: string
        - name: include
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of TokenStatus objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenStatus'
        default:
          description: The operation failed and the response is an error object describing the status code and failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/usertoken/exchange:
    post:
      tags:
        - UserToken
      operationId: UserToken_ExchangeToken
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: connectionName
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      requestBody:            
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenExchangeRequest'
      responses:
        '200':
          description: "A Token Response object will be returned\r\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '404':
          description: "Resource was not found\r\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        default:
          description: The operation failed and the response is an error object describing the status code and failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v3/tokenInternals/tokenStatus:
    post:
      tags:
        - TokenInternals
      summary: PostTokenStatus
      description: PostTokenStatus
      operationId: TokenInternals_PostTokenStatus
      requestBody:            
          description: TokenStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenStatus'
      responses:
        default:
          description: TokenStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenStatus'
  /v3/tokenInternals/tokenExchangeResource:
    post:
      tags:
        - TokenInternals
      summary: PostTokenExchangeResource
      description: PostTokenExchangeResource
      operationId: TokenInternals_PostTokenExchangeResource
      requestBody:            
          description: TokenExchangeResource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenExchangeResource'
      responses:
        default:
          description: TokenExchangeResource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenExchangeResource'
  /v3/tokenInternals/tokenResponse:
    post:
      tags:
        - TokenInternals
      summary: PostTokenResponse
      description: PostTokenResponse
      operationId: TokenInternals_PostTokenResponse
      requestBody:            
          description: TokenResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      responses:
        default:
          description: TokenResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /v3/tokenInternals/signInUrlResponse:
    post:
      tags:
        - TokenInternals
      summary: PostSignInUrlResponse
      description: PostSignInUrlResponse
      operationId: TokenInternals_PostSignInUrlResponse
      requestBody:            
          description: SignInUrlResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInUrlResponse'
      responses:
        default:
          description: SignInUrlResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInUrlResponse'
  /v3/tokenInternals/errorResponse:
    post:
      tags:
        - TokenInternals
      summary: PostErrorResponse
      description: PostErrorResponse
      operationId: TokenInternals_PostErrorResponse
      requestBody:            
          description: ErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      responses:
        default:
          description: ErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    SignInUrlResponse:
      type: object
      properties:
        signInLink:
          type: string
        tokenExchangeResource:
          $ref: '#/components/schemas/TokenExchangeResource'
    TokenExchangeResource:
      description: Record for a token exchange request that is sent as part of Authentication
      type: object
      properties:
        id:
          description: A unique identifier for this token exchange instance
          type: string
        uri:
          description: The application ID / resource identifier with which to exchange a token on behalf of
          type: string
        providerId:
          description: "The identifier of the provider with which to attempt a token exchange\r\nA value of null or empty will default to Azure Active Directory"
          type: string
    TokenResponse:
      description: A response that includes a user token
      type: object
      properties:
        channelId:
          description: The channelId of the TokenResponse
          type: string
        connectionName:
          description: The connection name
          type: string
        token:
          description: The user token
          type: string
        expiration:
          description: Expiration for the token, in ISO 8601 format (e.g. "2007-04-05T14:30Z")
          type: string
    ErrorResponse:
      description: An HTTP API Error response
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Error:
      description: Object representing error information
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message
          type: string
        innerHttpError:
          $ref: '#/components/schemas/InnerHttpError'
    InnerHttpError:
      description: Object representing inner http error
      type: object
      properties:
        statusCode:
          format: int32
          description: HttpStatusCode from failed request
          type: integer
        body:
          description: Body from failed request
          type: object
    AadResourceUrls:
      type: object
      properties:
        resourceUrls:
          type: array
          items:
            type: string
    Void:
      type: object
      properties: {}
    TokenStatus:
      description: The status of a particular token
      type: object
      properties:
        channelId:
          description: The channelId of the token status pertains to
          type: string
        connectionName:
          description: The name of the connection the token status pertains to
          type: string
        hasToken:
          description: True if a token is stored for this ConnectionName
          type: boolean
        serviceProviderDisplayName:
          description: The display name of the service provider for which this Token belongs to
          type: string
    TokenExchangeRequest:
      type: object
      properties:
        uri:
          type: string
        token:
          type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: Access token to authenticate calls to the Bot Connector Service.
      name: Authorization
      in: header
security: 
  -  ApiKeyAuth: []